@page "/r_inventario"
@page "/inventario/{inventarioId:int}"
@inject ProductoBLL ProductoBLL
@inject ProveedorBLL ProveedorBLL
@inject InventarioBLL InventarioBLL
@inject NotificationService notify
@attribute [Authorize]


<EditForm Model="inventario" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card col-lg-7 mx-auto">
        <div class="shadow">
            <div class="card-header">
                <h1 class="text-center"><strong>Registro de Inventario</strong></h1>
            </div>
            <br>
            <br>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputNumber required="" @bind-Value="inventario.InventarioId" class="input" id="id" />
                            <span class="highlight"></span>
                            <span class="bar"></span>
                            <label>No. ID</label>
                        </div>
                        <button type="button" class="btn" @onclick="Buscar" id="boton">
                            <span class="btn-text-one" style="color: white;" title='Buscar inventario'>Buscar</span>
                        </button>
                    </div>
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto"> </div>

                </div>
                <div class="row">
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputDate required="" @bind-Value="inventario.Fecha" class="input" />
                            <span class="highlight"></span>
                            <span class="bar"></span>
                            <label>Fecha</label>
                        </div>
                    </div>

                    <div class="col-sm-2 col-md-4 mb-2 mx-auto"> </div>

                </div>
                <br>
                <div class="row">
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputSelect required="" @bind-Value="inventario.ProveedorId" class="input">
                                @if (ProveedorList != null)
                                {
                                    @foreach (var item in ProveedorList)
                                    {
                                        <option value="@item.ProveedorId">@item.Nombre</option>
                                    }
                                }
                                <span class="highlight"></span>
                                <span class="bar"></span>
                                <label>Proveedor</label>
                                <ValidationMessage For="@(() => inventario.ProveedorId)" />
                            </InputSelect>
                        </div>
                    </div>
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputSelect required="" @bind-Value="inventario.ProductoId" class="input">
                                @if (ProductoList != null)
                                {
                                    @foreach (var item in ProductoList)
                                    {
                                        <option value="@item.ProductoId">@item.Nombre</option>
                                    }
                                }
                                <span class="highlight"></span>
                                <span class="bar"></span>
                                <label>Producto</label>
                                <ValidationMessage For="@(() => inventario.ProductoId)" />
                            </InputSelect>
                        </div>
                    </div>
                </div>
                <br>
                <br>
                <div class="row">
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputNumber required="" @bind-Value="inventario.Cantidad" class="input" />
                            <span class="highlight"></span>
                            <span class="bar"></span>
                            <label>Cantidad actual</label>
                        </div>
                    </div>
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputSelect required="" @bind-Value="inventario.CodigoBarra" class="input">
                                @if (ProductoList != null)
                                {
                                    @foreach (var item in ProductoList)
                                    {
                                        <option value="@item.CodigoBarra">@item.CodigoBarra</option>
                                    }
                                }
                                <span class="highlight"></span>
                                <span class="bar"></span>
                                <label>Codigo de barra</label>
                                <ValidationMessage For="@(() => inventario.CodigoBarra)" />
                            </InputSelect>
                        </div>
                    </div>

                </div>
                <br>
                <br>

                @* <div class="input-group">
                <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                <div class="group">
                <InputNumber required="" @bind-Value="inventario.Cantidad" class="input" />
                <span class="highlight"></span>
                <span class="bar"></span>
                <label>Cantidad actual</label>
                </div>
                </div>
                <button class="btn btn-outline-secondary" type="button" style="background: green;"><ion-icon
                name="add-outline"></ion-icon></button>
                <button class="btn btn-outline-secondary" type="button" style="background: red;"><ion-icon
                name="remove-outline"></ion-icon></button>
                </div> *@
            </div>

            @*Botones*@
            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo"><span
                            class="oi oi-file"></span>
                        Nuevo</button>
                    <button type="submit" class="btn btn-outline-success"><span class="oi oi-document"></span>
                        Guardar</button>
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar"><span
                            class="oi oi-delete"></span>
                        Eliminar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    [Parameter]
    public int inventarioId { get; set; }
    public Inventarios inventario { get; set; } = new Inventarios();
    List<Productos> ProductoList = new List<Productos>();
    List<Proveedores> ProveedorList = new List<Proveedores>();

    protected override void OnInitialized()
    {
        if (inventarioId > 0)
        {
            this.inventario.InventarioId = inventarioId;
            this.Buscar();
        }
        ProductoList = ProductoBLL.GetList(p => true && p.Status == true);
        ProveedorList = ProveedorBLL.GetList(p => true && p.Status == true);
    }

    public void Nuevo()
    {
        inventario = new Inventarios();
        notify.ShowNotification("Nueva plantilla creada correctamente.", NotificationSeverity.Success);
    }

    bool Validar()
    {
        bool validar = true;

        if (inventario!.InventarioId < 0)
        {
            notify.ShowNotification("El ID debe ser mayor que 0.", NotificationSeverity.Warning);
            validar = false;
        }

        return validar;
    }

    void Guardar()
    {

        if (!Validar()) { return; }

        if (InventarioBLL.Guardar(inventario))
        {
            notify.ShowNotification("Fue guardado correctamente.");
            inventario = new Inventarios();
        }
        else
        {
            notify.ShowNotification("No fue guardado, intentar nuevamente.", NotificationSeverity.Error);
        }

    }

    private void Buscar()
    {
        if (inventario!.InventarioId > 0)
        {
            var encontrado = InventarioBLL.Buscar(inventario);
            if (encontrado != null)
            {
                notify.ShowNotification("Se ha encontrado con éxito", NotificationSeverity.Info);
                this.inventario = encontrado;
            }
            else
            {
                notify.ShowNotification("El ID ingresado no ha sido encontrado.", NotificationSeverity.Error);
            }
        }
    }

    public void Eliminar()
    {
        if (InventarioBLL.Eliminar(inventario.InventarioId))
        {
            notify.ShowNotification("Se ha eliminado con éxito.", NotificationSeverity.Success);
            inventario = new Inventarios();
        }
        else
        {
            notify.ShowNotification("No hay elementos para borrar.", NotificationSeverity.Warning);
            return;
        }
    }
}