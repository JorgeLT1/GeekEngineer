@page "/r_categoria"
@page "/r_categoria/{CategoriaId:int}"
@inject CategoriaBLL CategoriaBLL
@inject NotificationService notify
@inject NavigationManager NavigationManager
@attribute [Authorize]


<EditForm Model="categoria" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card col-lg-7 mx-auto">
        <div class="shadow">
            <div class="card-header">
                <h1 class="text-center"><strong>Registro de Categoría</strong></h1>
            </div>
            <br>
            <br>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputDate required="" @bind-Value="categoria.Fecha" class="input" id="fecha" />
                            <span class="highlight"></span>
                            <span class="bar"></span>
                            <label>Fecha</label>
                            <ValidationMessage For="@(() => categoria.Fecha)" />
                        </div>
                    </div>
                    <div class="col-sm-2 col-md-4 mb-2 mx-auto">
                        <div class="group">
                            <InputText required="" @bind-Value="categoria.Nombre" class="input" />
                            <span class="highlight"></span>
                            <span class="bar"></span>
                            <label>Nombre</label>
                            <ValidationMessage For="@(() => categoria.Nombre)" />
                        </div>
                    </div>
                </div>
            </div>
            <br>
            <br>


            @*Botones*@
            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-outline-primary" @onclick="Nuevo"><span
                            class="oi oi-file"></span>
                        Nuevo</button>
                    <button type="submit" class="btn btn-outline-success"><span class="oi oi-document"></span>
                        Guardar</button>
                    <button type="button" class="btn btn-outline-danger" @onclick="Eliminar"><span
                            class="oi oi-delete"></span>
                        Eliminar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public int CategoriaId { get; set; }
    public Categorias categoria { get; set; } = new Categorias();
    
    protected override void OnInitialized()
    {
        if (CategoriaId > 0)
        {
            this.categoria.CategoriaId = CategoriaId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        categoria = new Categorias();
        NavigationManager.NavigateTo($"/r_categoria");
        notify.ShowNotification("Nueva plantilla creada correctamente.", NotificationSeverity.Success);
    }

    bool Validar()
    {
        bool validar = true;

        if (categoria!.CategoriaId < 0)
        {
            notify.ShowNotification("El ID debe ser mayor que 0.", NotificationSeverity.Error);
            validar = false;
        }
        if (CategoriaBLL.ExisteNombreCategoria(categoria) == false)
        {
            notify.ShowNotification("Ya hay una categoría registrada con ese nombre.", NotificationSeverity.Warning);
            validar = false;
        }

        return validar;
    }

    void Guardar()
    {

        if (!Validar()) { return; }

        if (CategoriaBLL.Guardar(categoria))
        {
            notify.ShowNotification("Fue guardado correctamente.");
            categoria = new Categorias();
            NavigationManager.NavigateTo($"/r_categoria");
        }
        else
        {
            notify.ShowNotification("No fue guardado, intentar nuevamente.", NotificationSeverity.Error);
        }
             
    }

    private void Buscar()
    {
        if (categoria!.CategoriaId > 0)
        {
            var encontrado = CategoriaBLL.Buscar(categoria);
            
            if (encontrado != null)
            {
                notify.ShowNotification("Se ha encontrado con éxito", NotificationSeverity.Success);
                this.categoria = encontrado;
            }
            else
            {
                notify.ShowNotification("El ID ingresado no ha sido encontrado.", NotificationSeverity.Error);
            }
        }
    }

    public void Eliminar()
    {
        if (CategoriaBLL.Eliminar(categoria.CategoriaId))
        {
            notify.ShowNotification("Se ha eliminado con éxito.", NotificationSeverity.Success);
            categoria = new Categorias();
        }
        else
        {
            notify.ShowNotification("No hay elementos para borrar.", NotificationSeverity.Warning);
            return;
        }
    }
}